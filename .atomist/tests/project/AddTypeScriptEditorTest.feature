# Copyright Â© 2017 Atomist, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


Feature: Tests from AddTypeScriptEditor.rt
  This file was autogenerated.
  It aims to avoid collisions, not remove redundancy.
  You can probably consolidate a lot of the elements.


  Scenario: AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Given the archive root
    When AddTypeScriptEditor editorNameisMyNewEditor, descriptionisThe newest of the new for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then parameters were valid
    Then changes were made
    Then fileExists atomist editors MyNewEditor ts for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains atomist editors MyNewEditor ts Editor MyNewEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains atomist editors MyNewEditor ts description for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains atomist editors MyNewEditor ts class MyNewEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains atomist editors MyNewEditor ts new MyNewEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then not result fileContains atomist editors MyNewEditor ts TypeScriptEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then not result fileContains atomist editors MyNewEditor ts sample TypeScript editor used by for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then not result fileContains atomist editors MyNewEditor ts helloTypeScript for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileExists atomist tests project MyNewEditorTest ts for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains atomist tests project MyNewEditorTest ts scenario MyNewEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then not result fileContains atomist tests project MyNewEditorTest ts TypeScriptEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileExists README md for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md MyNewEditor for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md The newest of the new for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md Put your editor prerequisites here for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md inputParameter Yes Example input parameter for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md MyNewEditor usage for AddTypeScriptEditor should add a TypeScript editor to a Rug archive
    Then fileContains README md Explain what your editor does here for AddTypeScriptEditor should add a TypeScript editor to a Rug archive


  Scenario: AddTypeScriptEditor should add a TypeScript editor even if no README
    Given a file named .atomist/manifest.yml for AddTypeScriptEditor should add a TypeScript editor even if no README
    Given a file named .atomist/package.json for AddTypeScriptEditor should add a TypeScript editor even if no README
    When AddTypeScriptEditor editorNameisMyNewEditor, descriptionisThe newest of the new for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then parameters were valid
    Then changes were made
    Then fileExists atomist editors MyNewEditor ts for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileContains atomist editors MyNewEditor ts Editor MyNewEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileContains atomist editors MyNewEditor ts description for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileContains atomist editors MyNewEditor ts class MyNewEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileContains atomist editors MyNewEditor ts new MyNewEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then not result fileContains atomist editors MyNewEditor ts TypeScriptEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then not result fileContains atomist editors MyNewEditor ts sample TypeScript editor used by for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then not result fileContains atomist editors MyNewEditor ts helloTypeScript for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileExists atomist tests project MyNewEditorTest ts for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then fileContains atomist tests project MyNewEditorTest ts scenario MyNewEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then not result fileContains atomist tests project MyNewEditorTest ts TypeScriptEditor for AddTypeScriptEditor should add a TypeScript editor even if no README
    Then not result fileExists README md for AddTypeScriptEditor should add a TypeScript editor even if no README


  Scenario: AddTypeScriptEditor should not make any changes if the target project is not a Rug archive
    Given a file named .atomist/package.json for AddTypeScriptEditor should not make any changes if the target project is not a Rug archive
    When AddTypeScriptEditor editorNameisSillyPerson, descriptionisDance! for AddTypeScriptEditor should not make any changes if the target project is not a Rug archive
    Then parameters were valid
    Then no changes were made


  Scenario: AddTypeScriptEditor should make ready for typescript if not ready
    Given a file named .atomist/manifest.yml for AddTypeScriptEditor should make ready for typescript if not ready
    When AddTypeScriptEditor editorNameisSillyPerson, descriptionisDance! for AddTypeScriptEditor should make ready for typescript if not ready
    Then parameters were valid
    Then changes were made
    Then fileExists atomist editors SillyPerson ts for AddTypeScriptEditor should make ready for typescript if not ready
    Then fileContains atomist editors SillyPerson ts Editor SillyPerson for AddTypeScriptEditor should make ready for typescript if not ready
    Then fileExists atomist package json for AddTypeScriptEditor should make ready for typescript if not ready


  Scenario: AddTypeScriptEditor should fail if no editor name provided
    Given a file named .atomist/manifest.yml for AddTypeScriptEditor should fail if no editor name provided
    Given a file named .atomist/package.json for AddTypeScriptEditor should fail if no editor name provided
    When AddTypeScriptEditor descriptionisDance! for AddTypeScriptEditor should fail if no editor name provided
    Then parameters were invalid
    Then no changes were made
