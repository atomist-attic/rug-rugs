/*
 * Copyright Â© 2017 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

scenario AddTypeScriptExecutor should add a new blank executor to an existing Rug project

let executor_name = "MyNewExecutor"
let description = "This executor rocks"
let bot_intent = "do it"
let executor_path = { ".atomist/executors/" + executor_name + ".ts" }

given
  .atomist/manifest.yml = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""

.atomist/package.json = """{
  "dependencies": {
    "@atomist/rug": "0.12.0"
  }
}"""

when
  AddTypeScriptExecutor

then
  fileExists executor_path
    and fileContains executor_path "let myNewExecutor: Executor"
    and fileContains executor_path { 'description: "' + description + '"' }
    and fileContains executor_path { 'name: "' + executor_name + '"' }
    and fileContains executor_path { 'tags: ["atomist/intent=' + bot_intent + '"]' }
    and { !result.fileContains(executor_path, "TypeScriptExecutor") }
    and { !result.fileContains(executor_path, "typeScriptExecutor") }
    and { !result.fileContains(executor_path, "do something") }
    and { !result.fileContains(executor_path, "Sample TypeScript Executor") }


scenario AddTypeScriptExecutor should fail if not a Rug project

let executor_name = "MyNewExecutor"
let description = "This executor rocks"
let bot_intent = "do it"

given
  Empty

when
  AddTypeScriptExecutor

then
  NoChange


scenario AddTypeScriptExecutor should add package.json if Rug project not ready for TypeScript

let executor_name = "MyNewExecutor"
let description = "This executor rocks"
let bot_intent = "do it"

given
  .atomist/manifest.yml = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""

when
  AddTypeScriptExecutor

then
  fileExists ".atomist/executors/MyNewExecutor.ts"
    and fileExists ".atomist/package.json"


scenario AddTypeScriptExecutor should fail is parameters are missing

given
  .atomist/manifest.yml = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""

.atomist/package.json = """{
  "dependencies": {
    "@atomist/rug": "0.12.0"
  }
}"""

when
  AddTypeScriptExecutor executor_name = "NewExecutor", description = "What have I done?"

then
  MissingParameters
