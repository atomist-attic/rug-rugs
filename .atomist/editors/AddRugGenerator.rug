/*
 * Copyright Â© 2016 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@description "adds a new Rug Generator to an existing Rug Archive project"
@tag "rug"
@tag "atomist"
editor AddRugGenerator

precondition IsRugArchive

@displayName "Generator Name"
@description "name of the generator"
@validInput "a valid Rug Generator name starting with a capital letter and containing only alphanumeric characters, 1-100 characters"
@minLength 1
@maxLength 100
param generator_name: ^[A-Z][A-Za-z0-9]*$

let default_generator_name = "SampleGenerator"

let sample_generator_path = { ".atomist/editors/" + default_generator_name + ".rug" }
let sample_generator_test_path = { ".atomist/tests/" + default_generator_name + ".rt" }

let generator_path = { ".atomist/editors/" + generator_name + ".rug" }
let generator_test_path = { ".atomist/tests/" + generator_name + ".rt" }

with Project
  begin
    do copyEditorBackingFileOrFail sample_generator_path generator_path
    do copyEditorBackingFileOrFail sample_generator_test_path generator_test_path
    with File when path = generator_path
        do replace default_generator_name generator_name
    with File when path = generator_test_path
        do replace default_generator_name generator_name
  end
