/*
 * Copyright Â© 2017 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

scenario AddTypeScriptEditor should add a TypeScript editor to a Rug archive

given
  ArchiveRoot

when
  AddTypeScriptEditor editor_name="MyNewEditor", description="The newest of the new"

then
  fileExists ".atomist/editors/MyNewEditor.ts"
    and fileContains ".atomist/editors/MyNewEditor.ts" '@Editor("MyNewEditor"'
    and fileContains ".atomist/editors/MyNewEditor.ts" "class MyNewEditor"
    and fileContains ".atomist/editors/MyNewEditor.ts" "new MyNewEditor()"
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "TypeScriptEditor") }
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "@DESCRIPTION@") }
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "helloTypeScript") }
    and fileExists ".atomist/tests/MyNewEditor.rt"
    and fileContains ".atomist/tests/MyNewEditor.rt" "scenario MyNewEditor"
    and { !result.fileContains(".atomist/tests/MyNewEditor.rt", "TypeScriptEditor") }
    and fileExists "README.md"
    and fileContains "README.md" "### MyNewEditor"
    and fileContains "README.md" "The newest of the new"
    and fileContains "README.md" "Put your editor prerequisites here."
    and fileContains "README.md" "`input_parameter` | Yes | | Example input parameter"
    and fileContains "README.md" ":MyNewEditor \\"
    and fileContains "README.md" "Explain what your editor does here."


scenario AddTypeScriptEditor should add a TypeScript editor even if no README

given
  ".atomist/manifest.yml" = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""
  ".atomist/package.json" = '{"dependencies":{"@atomist/rug":"0.12.0"}}'

when
  AddTypeScriptEditor editor_name="MyNewEditor", description="The newest of the new"

then
  fileExists ".atomist/editors/MyNewEditor.ts"
    and fileContains ".atomist/editors/MyNewEditor.ts" '@Editor("MyNewEditor"'
    and fileContains ".atomist/editors/MyNewEditor.ts" "class MyNewEditor"
    and fileContains ".atomist/editors/MyNewEditor.ts" "new MyNewEditor()"
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "TypeScriptEditor") }
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "@DESCRIPTION@") }
    and { !result.fileContains(".atomist/editors/MyNewEditor.ts", "helloTypeScript") }
    and fileExists ".atomist/tests/MyNewEditor.rt"
    and fileContains ".atomist/tests/MyNewEditor.rt" "scenario MyNewEditor"
    and { !result.fileContains(".atomist/tests/MyNewEditor.rt", "TypeScriptEditor") }
    and { !result.fileExists("README.md") }


scenario AddTypeScriptEditor should not make any changes if the target project is not a Rug archive

given
  ".atomist/package.json" = '{"dependencies":{"@atomist/rug":"0.12.0"}}'

when
  AddTypeScriptEditor editor_name="SillyPerson", description="Dance!"

then
  NoChange


scenario AddTypeScriptEditor should not make any changes if the target project is ready for TypeScript

given
  ".atomist/manifest.yml" = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""

when
  AddTypeScriptEditor editor_name="SillyPerson", description="Dance!"

then
  NoChange


scenario AddTypeScriptEditor should fail if no editor name provided

given
  ".atomist/manifest.yml" = """group: test-rugs
artifact: test-manifest
version: "0.1.0"
requires: "[0.12.0,1.0.0)"
dependencies:
extensions:
"""
  ".atomist/package.json" = '{"dependencies":{"@atomist/rug":"0.12.0"}}'

when
  AddTypeScriptEditor description="Dance!"

then
  MissingParameters
