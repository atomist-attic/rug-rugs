Feature: Tests from AddTypeScriptHandler.rt
  This file was autogenerated.
  It aims to avoid collisions, not remove redundancy.
  You can probably consolidate a lot of the elements.


# Copyright Â© 2017 Atomist, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


  Scenario: AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project
    Given a file named .atomist/manifest.yml for AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project
    Given a file named .atomist/package.json for AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project
    When AddTypeScriptHandler for AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project
    Then parameters were valid
    Then changes were made
    Then fileExists atomist handlers MyNewHandler ts for AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project
    Then fileContains atomist handlers MyNewHandler ts Tag for AddTypeScriptHandler should add a new blank handler using default tree expression to Rug project


  Scenario: AddTypeScriptHandler should add a new blank handler to an existing Rug project
    Given a file named .atomist/manifest.yml for AddTypeScriptHandler should add a new blank handler to an existing Rug project
    Given a file named .atomist/package.json for AddTypeScriptHandler should add a new blank handler to an existing Rug project
    When AddTypeScriptHandler for AddTypeScriptHandler should add a new blank handler to an existing Rug project
    Then parameters were valid
    Then changes were made
    Then fileExists atomist handlers MyNewHandler ts for AddTypeScriptHandler should add a new blank handler to an existing Rug project
    Then fileContains atomist handlers MyNewHandler ts Push on Repo channel ChatChannel contains Commit author GitHubId hasGithubIdentity Person hasChatIdentity ChatId for AddTypeScriptHandler should add a new blank handler to an existing Rug project
    Then not result fileContains atomist handlers MyNewHandler ts Tag for AddTypeScriptHandler should add a new blank handler to an existing Rug project


  Scenario: AddTypeScriptHandler should fail if not a Rug project
    Given an empty project
    When AddTypeScriptHandler for AddTypeScriptHandler should fail if not a Rug project
    Then parameters were valid
    Then no changes were made
