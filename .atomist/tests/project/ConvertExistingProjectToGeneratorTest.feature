# Copyright Â© 2017 Atomist, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


Feature: Tests from ConvertExistingProjectToGenerator.rt
  This file was autogenerated.
  It aims to avoid collisions, not remove redundancy.
  You can probably consolidate a lot of the elements.


  Scenario: ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Given an empty project
    When ConvertExistingProjectToGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then parameters were valid
    Then changes were made
    Then fileExists manifest for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains manifest artifact archiveName for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains manifest group groupId for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains manifest version for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then there should be a package file
    Then the package file depends on rugs
    Then fileExists atomist tsconfig json for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist tsconfig json suppressImplicitAnyIndexErrors for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileExists atomist gitignore for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist gitignore node modules for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result directoryExists atomist node modules atomist rug for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result fileExists atomist node modules atomist rug model Core ts for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileExists atomist editors MyNewGenerator ts for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist editors MyNewGenerator ts Generator MyNewGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist editors MyNewGenerator ts class MyNewGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist editors MyNewGenerator ts new MyNewGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result fileContains atomist editors MyNewGenerator ts TypeScriptGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result fileContains atomist editors MyNewGenerator ts DESCRIPTION for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result fileContains atomist editors MyNewGenerator ts typeScriptGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileExists atomist tests project MyNewGeneratorTest ts for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then fileContains atomist tests project MyNewGeneratorTest feature scenario MyNewGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator
    Then not result fileContains atomist tests project MyNewGeneratorTest ts TypeScriptGenerator for ConvertExistingProjectToGenerator should add Rug archive files and default generator


  Scenario: ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Given a file named README.md for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Given a file named CHANGELOG.md for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Given a file named LICENSE for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Given a file named configure for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    When ConvertExistingProjectToGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then parameters were valid
    Then changes were made
    Then fileExists manifest for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains manifest artifact archiveName for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains manifest group groupId for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains manifest version for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then there should be a package file
    Then the package file depends on rugs
    Then fileExists atomist tsconfig json for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist tsconfig json suppressImplicitAnyIndexErrors for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileExists atomist gitignore for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist gitignore node modules for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result directoryExists atomist node modules atomist rug for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result fileExists atomist node modules atomist rug model Core ts for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileExists atomist editors MyNewGenerator ts for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist editors MyNewGenerator ts Generator MyNewGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist editors MyNewGenerator ts class MyNewGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist editors MyNewGenerator ts new MyNewGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result fileContains atomist editors MyNewGenerator ts TypeScriptGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result fileContains atomist editors MyNewGenerator ts DESCRIPTION for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result fileContains atomist editors MyNewGenerator ts typeScriptGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileExists atomist tests project MyNewGeneratorTest ts for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist tests project MyNewGeneratorTest feature scenario MyNewGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then not result fileContains atomist tests project MyNewGeneratorTest ts TypeScriptGenerator for ConvertExistingProjectToGenerator should add appropriate generator tests assertions
    Then fileContains atomist tests project MyNewGeneratorTest ts fileExists README md for ConvertExistingProjectToGenerator should add appropriate generator tests assertions


  Scenario: ConvertExistingProjectToGenerator should make no change if project already contains a manifest
    Given the archive root
    When ConvertExistingProjectToGenerator for ConvertExistingProjectToGenerator should make no change if project already contains a manifest
    Then parameters were valid
    Then no changes were made
